{"repository_name":"github.com/werner/crystal_on_steroids","body":"# Crystal on Steroids [![Build Status](https://travis-ci.org/werner/crystal_on_steroids.png)](https://travis-ci.org/werner/crystal_on_steroids) [![Read the Docs](https://img.shields.io/readthedocs/pip.svg)](https://werner.github.io/crystal_on_steroids/)\n\nA group of methods to make Crystal more programmer friendly. Methods taken from Rails ActiveSupport and others.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crystal_on_steroids:\n    github: werner/crystal_on_steroids\n```\n\n## Usage\n\n```crystal\nrequire \"crystal_on_steroids\"\n```\n\n#### Methods\n\n**AliasMethod**\n\n* alias_method\n\n**Object**\n\n* present?\n* presence\n* to_query\n* to_param\n* in?\n* presence_in\n* dig?\n\n**Array**\n\n* second\n* third\n* fourth\n* fifth\n* rest\n* dig\n* split\n* from\n* to\n* in_groups\n* slice\n\n**Hash**\n\n* compact\n* compact!\n* dig\n\n**Enumerable**\n\n* blank?\n* many?\n* pluck\n* excludes?\n* without\n* avg (average)\n\n**Time**\n\n* prev_day\n* next_day\n* yesterday\n* tomorrow\n* today?\n\n**String**\n\n* remove\n* truncate\n* truncate_words\n* squish\n\n**Int**\n\n* multiple_of?\n* ordinal\n* ordinalize\n\n**Number**\n\n* bytes\n* kilobytes\n* megabytes\n* gigabytes\n* terabytes\n* petabytes\n* exabytes\n\n**Regex**\n\n* match?\n\n**Range**\n\n* overlaps?\n\n**JSON::Any**\n\n* dig\n\n**YAML::Any**\n\n* dig\n\nMore details in [docs](https://werner.github.io/crystal_on_steroids/)\n\n## Contributing\n\n1. Fork it ( https://github.com/werner/crystal_on_steroids/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [werner](https://github.com/werner) Werner EchezurÃ­a - creator, maintainer\n","program":{"html_id":"github.com/werner/crystal_on_steroids/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/werner/crystal_on_steroids","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/werner/crystal_on_steroids/AliasMethod","path":"AliasMethod.html","kind":"module","full_name":"AliasMethod","name":"AliasMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/alias_method.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/alias_method.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/werner/crystal_on_steroids/Number","kind":"struct","full_name":"Number","name":"Number"}],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"alias_method(new_method,old_method)-macro","html_id":"alias_method(new_method,old_method)-macro","name":"alias_method","doc":"Defines new_method as an alias of old_method.\t\n\t\nThis creates a new method new_method that invokes old_method.\t\n\t\nNote that due to current language limitations this is only useful\t\nwhen neither named arguments nor blocks are involved.\t\n\t\n```\t\nclass Person\t\n  getter name\t\n\t\n  def initialize(@name)\t\n  end\t\n\t\n  alias_method full_name, name\t\nend\t\n\t\nperson = Person.new \"John\"\t\nperson.name #=> \"John\"\t\nperson.full_name #=> \"John\"\t\n```\t","summary":"<p>Defines new_method as an alias of old_method.</p>","abstract":false,"args":[{"name":"new_method","doc":null,"default_value":"","external_name":"new_method","restriction":""},{"name":"old_method","doc":null,"default_value":"","external_name":"old_method","restriction":""}],"args_string":"(new_method, old_method)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/alias_method.cr#L23","def":{"name":"alias_method","args":[{"name":"new_method","doc":null,"default_value":"","external_name":"new_method","restriction":""},{"name":"old_method","doc":null,"default_value":"","external_name":"old_method","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"\n    def \n{{ new_method.id }}\n(*args)\t\n      \n{{ old_method.id }}\n(*args)\t\n    \nend\t\n  \n"}}],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/array.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr"},{"filename":"crystal_on_steroids/dig.cr","line_number":48,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":37,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"fifth-instance-method","html_id":"fifth-instance-method","name":"fifth","doc":"Returns the fifth element in an array.\n\n```\n[1, 2, 3, 4, 5].second\n=> [5]\n```","summary":"<p>Returns the fifth element in an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L38","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L38","def":{"name":"fifth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[4]"}},{"id":"fourth-instance-method","html_id":"fourth-instance-method","name":"fourth","doc":"Returns the fourth element in an array.\n\n```\n[1, 2, 3, 4, 5].second\n=> [4]\n```","summary":"<p>Returns the fourth element in an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L28","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L28","def":{"name":"fourth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[3]"}},{"id":"from(position:Int)-instance-method","html_id":"from(position:Int)-instance-method","name":"from","doc":"Returns the tail of the array from `position`.\n\n```\n  %w( a b c d ).from(0)\n=> [\"a\", \"b\", \"c\", \"d\"]\n\n  %w( a b c d ).from(2)\n=> [\"c\", \"d\"]\n\n  %w( a b c d ).from(10)\n=> []\n\n  %w().from(0)\n=> []\n\n  %w( a b c d ).from(-2)\n=> [\"c\", \"d\"]\n\n  %w( a b c ).from(-10)\n=> []\n```","summary":"<p>Returns the tail of the array from <code>position</code>.</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L73","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L73","def":{"name":"from","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size == 0\n  [] of T\nelse\n  if position > size || position < (-(size))\n    [] of T\n  else\n    self[position, size]\n  end\nend"}},{"id":"in_groups(number,fill_with=nil)-instance-method","html_id":"in_groups(number,fill_with=nil)-instance-method","name":"in_groups","doc":"Splits or iterates over the array in `number` of groups, padding any\nremaining slots with +fill_with+ unless it is `false`.\n\n```\n  %w(1 2 3 4 5 6 7 8 9 10).in_groups(3) {|group| p group}\n  [\"1\", \"2\", \"3\", \"4\"]\n  [\"5\", \"6\", \"7\", nil]\n  [\"8\", \"9\", \"10\", nil]\n\n  %w(1 2 3 4 5 6 7 8 9 10).in_groups(3, '&nbsp;') {|group| p group}\n  [\"1\", \"2\", \"3\", \"4\"]\n  [\"5\", \"6\", \"7\", \"&nbsp;\"]\n  [\"8\", \"9\", \"10\", \"&nbsp;\"]\n\n  %w(1 2 3 4 5 6 7).in_groups(3, false) {|group| p group}\n  [\"1\", \"2\", \"3\"]\n  [\"4\", \"5\"]\n  [\"6\", \"7\"]\n```\n","summary":"<p>Splits or iterates over the array in <code>number</code> of groups, padding any remaining slots with +fill_with+ unless it is <code>false</code>.</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""},{"name":"fill_with","doc":null,"default_value":"nil","external_name":"fill_with","restriction":""}],"args_string":"(number, fill_with = <span class=\"n\">nil</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L166","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L166","def":{"name":"in_groups","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""},{"name":"fill_with","doc":null,"default_value":"nil","external_name":"fill_with","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"division = size / number\nmodulo = size % number\ngroups = [] of Array(T | Nil | Bool)\nstart = 0\nnumber.times do |index|\n  last_group = [] of T | Nil | Bool\n  length = division + (modulo > 0 && modulo > index ? 1 : 0)\n  self[start..(start + (length - 1))].each do |e|\n    last_group << e\n  end\n  groups << last_group\n  if ((fill_with != false) && modulo > 0) && (length == division)\n    last_group.push(fill_with)\n  end\n  start = start + length\nend\ngroups\n"}},{"id":"in_groups(number,fill_with=nil,&block)-instance-method","html_id":"in_groups(number,fill_with=nil,&amp;block)-instance-method","name":"in_groups","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""},{"name":"fill_with","doc":null,"default_value":"nil","external_name":"fill_with","restriction":""}],"args_string":"(number, fill_with = <span class=\"n\">nil</span>, &block)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L185","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L185","def":{"name":"in_groups","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""},{"name":"fill_with","doc":null,"default_value":"nil","external_name":"fill_with","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"groups = in_groups(number, fill_with)\ngroups.each do |g|\n  yield g\nend\n"}},{"id":"rest-instance-method","html_id":"rest-instance-method","name":"rest","doc":"Returns the elements in an array except the first one.\n\n```\n[1, 2, 3, 4, 5].rest\n=> [2, 3, 4, 5]\n```","summary":"<p>Returns the elements in an array except the first one.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L48","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L48","def":{"name":"rest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[1, size - 1]"}},{"id":"second-instance-method","html_id":"second-instance-method","name":"second","doc":"Returns the second element in an array.\n\n```\n[1, 2, 3, 4, 5].second\n=> [2]\n```","summary":"<p>Returns the second element in an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L8","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L8","def":{"name":"second","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[1]"}},{"id":"slice(index:Int,length:Int):Array(T)-instance-method","html_id":"slice(index:Int,length:Int):Array(T)-instance-method","name":"slice","doc":"Array#slice(index : Int, length : Int)\n\nReturns a sub array starting from the index for the length\nthats passed.","summary":"<p>Array#slice(index : Int, length : Int)</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(index : Int, length : Int) : Array(T)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L202","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L202","def":{"name":"slice","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"self[index, (index + length)]"}},{"id":"slice(index:Int):T-instance-method","html_id":"slice(index:Int):T-instance-method","name":"slice","doc":"Array#slice(index : Int)\n\nReturns the element of the array at the passed in Index.","summary":"<p>Array#slice(index : Int)</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : T","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L194","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L194","def":{"name":"slice","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[index]"}},{"id":"slice(range:Range(Int,Int)):Array(T)-instance-method","html_id":"slice(range:Range(Int,Int)):Array(T)-instance-method","name":"slice","doc":"Array#slice(range : Range(Int, Int))\n\nReturns a sub array based on the range passed in.","summary":"<p>Array#slice(range : Range(Int, Int))</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(range : Range(Int, Int)) : Array(T)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L209","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L209","def":{"name":"slice","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"self[range]"}},{"id":"split(value=nil)-instance-method","html_id":"split(value=nil)-instance-method","name":"split","doc":"Divides the array into one or more subarrays based on a delimiting `value`\nor the result of an optional block.\n\n```\n[1, 2, 3, 4, 5].split(3)\n=> [[1, 2], [4, 5]]\n```","summary":"<p>Divides the array into one or more subarrays based on a delimiting <code>value</code> or the result of an optional block.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(value = <span class=\"n\">nil</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L116","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L116","def":{"name":"split","args":[{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = self\nresult = [] of typeof(arr)\nwhile (idx = arr.index(value))\n  response = arr[0, idx]\n  arr = arr[idx, size]\n  result.push(response)\n  arr = arr.rest\nend\nresult << arr\n"}},{"id":"split(&block)-instance-method","html_id":"split(&amp;block)-instance-method","name":"split","doc":"Divides the array into one or more subarrays based on a\nthe result of an optional block.\n\n```\n(1..10).to_a.split { |i| i % 3 == 0 }\n=> [[1, 2], [4, 5], [7, 8], [10]]\n```","summary":"<p>Divides the array into one or more subarrays based on a the result of an optional block.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L135","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L135","def":{"name":"split","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = self\nresult = [] of typeof(arr)\nwhile (idx = arr.index do |i|\n  yield i\nend)\n  result << arr[0, idx]\n  arr = arr[idx, size]\n  arr = arr.rest\nend\nresult << arr\n"}},{"id":"third-instance-method","html_id":"third-instance-method","name":"third","doc":"Returns the third element in an array.\n\n```\n[1, 2, 3, 4, 5].second\n=> [3]\n```","summary":"<p>Returns the third element in an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L18","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L18","def":{"name":"third","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[2]"}},{"id":"to(position:Int)-instance-method","html_id":"to(position:Int)-instance-method","name":"to","doc":"Returns the beginning of the array up to `position`.\n\n```\n  %w( a b c d ).to(0)\n=> [\"a\"]\n\n  %w( a b c d ).to(2)\n=> [\"a\", \"b\", \"c\"]\n\n  %w( a b c d ).to(10)\n=> [\"a\", \"b\", \"c\", \"d\"]\n\n  %w().to(0)\n=> []\n\n  %w( a b c d ).to(-2)\n=> [\"a\", \"b\", \"c\"]\n\n  %w( a b c ).to(-10)\n=> []\n```\n","summary":"<p>Returns the beginning of the array up to <code>position</code>.</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L105","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/array.cr#L105","def":{"name":"to","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[0..position]"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":"Calls `to_param` on all its elements and joins the result with\nslashes.\n\nsource: Rails ActiveSupport","summary":"<p>Calls <code><a href=\"Array.html#to_param-instance-method\">#to_param</a></code> on all its elements and joins the result with slashes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L42","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L42","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.to_param).join('/')"}},{"id":"to_query(namespace)-instance-method","html_id":"to_query(namespace)-instance-method","name":"to_query","doc":"Cast an array as a HTTP::Params and buils an url-encode string.\n\n```\n[\"michael\", \"jhon\"].to_query(\"user\")\n=> \"user%5B%5D=michael&user%5B%5D=jhon\"\n```","summary":"<p>Cast an array as a HTTP::Params and buils an url-encode string.</p>","abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""}],"args_string":"(namespace)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L52","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L52","def":{"name":"to_query","args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prefix = \"#{namespace}[]\"\nif empty?\n  nil.to_query(prefix)\nelse\n  map do |value|\n    value.to_query(prefix)\n  end.join(\"&\")\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/bool.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bool.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":30,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":"A bool object will be blank if it's false.\n\n```\ntrue.blank?\n=> false\n\nfalse.blank?\n=> true\n```\n\nsource: Rails ActiveSupport","summary":"<p>A bool object will be blank if it's false.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bool.cr#L13","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bool.cr#L13","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!self"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":"Return `self`","summary":"<p>Return <code>self</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L32","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L32","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/CrystalOnSteroids","path":"CrystalOnSteroids.html","kind":"module","full_name":"CrystalOnSteroids","name":"CrystalOnSteroids","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/version.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/version.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.10.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Dig","path":"Dig.html","kind":"module","full_name":"Dig","name":"Dig","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":3,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/werner/crystal_on_steroids/Array","kind":"class","full_name":"Array(T)","name":"Array"},{"html_id":"github.com/werner/crystal_on_steroids/Hash","kind":"class","full_name":"Hash(K, V)","name":"Hash"},{"html_id":"github.com/werner/crystal_on_steroids/JSON/Any","kind":"struct","full_name":"JSON::Any","name":"Any"},{"html_id":"github.com/werner/crystal_on_steroids/NamedTuple","kind":"struct","full_name":"NamedTuple(**T)","name":"NamedTuple"},{"html_id":"github.com/werner/crystal_on_steroids/Tuple","kind":"struct","full_name":"Tuple(*T)","name":"Tuple"},{"html_id":"github.com/werner/crystal_on_steroids/YAML/Any","kind":"struct","full_name":"YAML::Any","name":"Any"}],"namespace":null,"doc":"Object#dig and Object#dig? methods are used to returns deeply nested values.\nIdeas taken from: https://www.reddit.com/r/crystal_programming/comments/477bnn/crystal_on_steroids/d0c07lt","summary":"<p>Object#dig and Object#dig? methods are used to returns deeply nested values.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dig(index)-instance-method","html_id":"dig(index)-instance-method","name":"dig","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L4","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L4","def":{"name":"dig","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[index]?"}},{"id":"dig(index,*keys)-instance-method","html_id":"dig(index,*keys)-instance-method","name":"dig","doc":"Retrieves the value object corresponding to the each key objects repeatedly.\n\n```\nh = { foo: {bar: {baz: 5}}}\n\nh.dig(:foo, :bar, :baz)           #=> 5\nh.dig(:foo, :blah)                #=> nil\n```","summary":"<p>Retrieves the value object corresponding to the each key objects repeatedly.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(index, *keys)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L16","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L16","def":{"name":"dig","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"item = self[index]?\nif item.responds_to?(:dig)\n  item.dig(*keys)\nelse\n  raise(Exception.new(\"#{item.class} does not respond to #dig\"))\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","path":"Enumerable.html","kind":"module","full_name":"Enumerable(T)","name":"Enumerable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/enumerable.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/werner/crystal_on_steroids/Hash","kind":"class","full_name":"Hash(K, V)","name":"Hash"},{"html_id":"github.com/werner/crystal_on_steroids/Range","kind":"struct","full_name":"Range(B, E)","name":"Range"}],"namespace":null,"doc":"The `Enumerable` mixin provides collection classes with several traversal, searching,\nfiltering and querying methods.\n\nIncluding types must provide an `each` method, which yields successive members\nof the collection.\n\nFor example:\n\n```\nclass Three\n  include Enumerable(Int32)\n\n  def each\n    yield 1\n    yield 2\n    yield 3\n  end\nend\n\nthree = Three.new\nthree.to_a                # => [1, 2, 3]\nthree.select &.odd?       # => [1, 3]\nthree.all? { |x| x < 10 } # => true\n```\n\nNote that most search and filter methods traverse an Enumerable eagerly,\nproducing an `Array` as the result. For a lazy alternative refer to\nthe `Iterator` and `Iterable` modules.","summary":"<p>The <code><a href=\"Enumerable.html\">Enumerable</a></code> mixin provides collection classes with several traversal, searching, filtering and querying methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"avg-instance-method","html_id":"avg-instance-method","name":"avg","doc":"Returns the average of a collection of numbers.\n\n```\n[1, 2, 3, 4, 5].avg\n=> 3\n```","summary":"<p>Returns the average of a collection of numbers.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L111","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L111","def":{"name":"avg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.sum / self.size"}},{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":"An enumerable is blank if it's empty.\n\n```\n[1,2,3].blank?\n=> false\n[].blank?\n=> true\n```\n\nsource: Rails ActiveSupport","summary":"<p>An enumerable is blank if it's empty.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L12","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L12","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"empty?"}},{"id":"excludes?(obj)-instance-method","html_id":"excludes?(obj)-instance-method","name":"excludes?","doc":"Returns `true` if the collection does not contains *obj*, `false` otherwise.\n\n```\n[1, 2, 3].excludes?(4) # => true\n[1, 2, 3].excludes?(3) # => false\n```\n\nsource: Rails ActiveSupport","summary":"<p>Returns <code>true</code> if the collection does not contains <em>obj</em>, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L89","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L89","def":{"name":"excludes?","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(includes?(obj))"}},{"id":"many?(&block)-instance-method","html_id":"many?(&amp;block)-instance-method","name":"many?","doc":"Returns `true` if many elements fulfilled the block condition,\nmuch like any?, so `people.many? { |p| p.age > 26 }` returns `true`\nif more than one person is over 26.\n\nsource: Rails ActiveSupport","summary":"<p>Returns <code>true</code> if many elements fulfilled the block condition, much like any?, so <code>people<a href=\"Enumerable.html#many%3F%28%26block%29-instance-method\">.many?</a> { |p| p.age > 26 }</code> returns <code>true</code> if more than one person is over 26.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L21","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L21","def":{"name":"many?","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"cnt = 0\neach do |element|\n  if yield element\n    cnt = cnt + 1\n  end\nend\ncnt > 1\n"}},{"id":"many?-instance-method","html_id":"many?-instance-method","name":"many?","doc":"Returns `true` if the enumerable has more than 1 element. functionally\nequivalent to `enum.size > 1`.\n\nsource: Rails ActiveSupport","summary":"<p>Returns <code>true</code> if the enumerable has more than 1 element.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L33","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L33","def":{"name":"many?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size > 1"}},{"id":"pluck(*keys)-instance-method","html_id":"pluck(*keys)-instance-method","name":"pluck","doc":"Convert an enumerable to an array based on the given key, throws an error if any key does not exists.\n\n```\n[{ name: \"David\" }, { name: \"Rafael\" }, { name: \"Aaron\" }].pluck(:name)\n=> [\"David\", \"Rafael\", \"Aaron\"]\n\n[{ id: 1, name: \"David\" }, { id: 2, name: \"Rafael\" }].pluck(:id, :name)\n=> [{1, \"David\"}, {2, \"Rafael\"}]\n```\n\nsource: Rails ActiveSupport","summary":"<p>Convert an enumerable to an array based on the given key, throws an error if any key does not exists.</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(*keys)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L48","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L48","def":{"name":"pluck","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if keys.many?\n  map do |item|\n    keys.map do |key|\n      item[key]\n    end\n  end\nelse\n  map do |item|\n    item[keys.first]\n  end\nend"}},{"id":"pluck?(*keys)-instance-method","html_id":"pluck?(*keys)-instance-method","name":"pluck?","doc":"Convert an enumerable to an array based on the given key, returns nil if any key does not exists.\n\n```\n[{ name: \"David\" }, { name: \"Rafael\" }, { name: \"Aaron\" }].pluck(:name)\n=> [\"David\", \"Rafael\", \"Aaron\"]\n\n[{ id: 1, name: \"David\" }, { id: 2, name: \"Rafael\" }].pluck(:id, :name)\n=> [{1, \"David\"}, {2, \"Rafael\"}]\n\n[{ id: 1, name: \"David\" }, { id: 2, name: \"Rafael\" }].pluck(:color)\n=> []\n\n[{ id: 1, name: \"David\" }, { id: 2, name: \"Rafael\" }].pluck(:id, :color)\n=> [{1, nil}, {2, nil}]\n```\n\nsource: Rails ActiveSupport","summary":"<p>Convert an enumerable to an array based on the given key, returns nil if any key does not exists.</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(*keys)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L73","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L73","def":{"name":"pluck?","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if keys.many?\n  map do |item|\n    keys.map do |key|\n      item[key]?\n    end\n  end.compact\nelse\n  map do |item|\n    item[keys.first?]?\n  end.compact\nend"}},{"id":"without(*items)-instance-method","html_id":"without(*items)-instance-method","name":"without","doc":"Returns a copy of the enumerable without the specified items.\n\n```\n[1, 2, 3, 4, 5].without 3, 5\n=> [1, 2, 4]\n```\n\nsource: Rails ActiveSupport","summary":"<p>Returns a copy of the enumerable without the specified items.</p>","abstract":false,"args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"args_string":"(*items)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L101","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/enumerable.cr#L101","def":{"name":"without","args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reject do |item|\n  items.includes?(item)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Hash","path":"Hash.html","kind":"class","full_name":"Hash(K, V)","name":"Hash","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":52,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"},{"filename":"crystal_on_steroids/hash.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/hash.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":63,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Hash` represents a mapping of keys to values.\n\nSee the [official docs](http://crystal-lang.org/docs/syntax_and_semantics/literals/hash.html) for the basics.","summary":"<p>A <code><a href=\"Hash.html\">Hash</a></code> represents a mapping of keys to values.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"compact-instance-method","html_id":"compact-instance-method","name":"compact","doc":"Returns a hash with non `nil` values.\n\n```\nhash = { a: true, b: false, c: nil}\nhash.compact # => { a: true, b: false }\nhash # => { a: true, b: false, c: nil}\n{ c: nil }.compact # => {}\n```\n\nsource: ActiveSupport","summary":"<p>Returns a hash with non <code>nil</code> values.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/hash.cr#L12","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/hash.cr#L12","def":{"name":"compact","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.reject do |_, value|\n  value.nil?\nend"}},{"id":"compact!-instance-method","html_id":"compact!-instance-method","name":"compact!","doc":"Replaces current hash with non `nil` values.\n\n```\nhash = { a: true, b: false, c: nil }\nhash.compact! # => { a: true, b: false }\nhash # => { a: true, b: false }\n```\n\nsource: Rails ActiveSupport","summary":"<p>Replaces current hash with non <code>nil</code> values.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/hash.cr#L25","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/hash.cr#L25","def":{"name":"compact!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.reject! do |_, value|\n  value.nil?\nend"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":"Alias for to_query","summary":"<p>Alias for to_query</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L86","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L86","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_query"}},{"id":"to_query(namespace=nil)-instance-method","html_id":"to_query(namespace=nil)-instance-method","name":"to_query","doc":"Returns a string representation of the receiver suitable for use as a URL\nquery string:\n\n```\n{name: \"David\", nationality: \"Danish\"}.to_query\n# => \"name=David&nationality=Danish\"\n```\n\nAn optional namespace can be passed to enclose key names:\n\n```\n{name: \"David\", nationality: \"Danish\"}.to_query(\"user\")\n# => \"user%5Bname%5D=David&user%5Bnationality%5D=Danish\"\n```\n","summary":"<p>Returns a string representation of the receiver suitable for use as a URL query string:</p>","abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"nil","external_name":"namespace","restriction":""}],"args_string":"(namespace = <span class=\"n\">nil</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L79","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L79","def":{"name":"to_query","args":[{"name":"namespace","doc":null,"default_value":"nil","external_name":"namespace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |key, value|\n  value.to_query(namespace ? \"#{namespace}[#{key}]\" : key)\nend.compact.sort!.flatten.join(\"&\")"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/werner/crystal_on_steroids/AliasMethod","kind":"module","full_name":"AliasMethod","name":"AliasMethod"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/inflections.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inflections.cr"},{"filename":"crystal_on_steroids/int.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/int.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"multiple_of?(number)-instance-method","html_id":"multiple_of?(number)-instance-method","name":"multiple_of?","doc":"Check whether the integer is evenly divisible by the argument.\n\n```\n  0.multiple_of?(0)  # => true\n  6.multiple_of?(5)  # => false\n  10.multiple_of?(2) # => true\n```","summary":"<p>Check whether the integer is evenly divisible by the argument.</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/int.cr#L9","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/int.cr#L9","def":{"name":"multiple_of?","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"number != 0 ? (self % number) == 0 : zero?"}},{"id":"ordinal-instance-method","html_id":"ordinal-instance-method","name":"ordinal","doc":"Returns the suffix that should be added to a number to denote the position\nin an ordered sequence such as 1st, 2nd, 3rd, 4th.\n\n```\n  1.ordinal     # => \"st\"\n  2.ordinal     # => \"nd\"\n  1002.ordinal  # => \"nd\"\n  1003.ordinal  # => \"rd\"\n  -11.ordinal   # => \"th\"\n  -1021.ordinal # => \"st\"\n```","summary":"<p>Returns the suffix that should be added to a number to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inflections.cr#L13","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inflections.cr#L13","def":{"name":"ordinal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"abs_number = self.to_i.abs\nif (11..13).includes?(abs_number % 100)\n  \"th\"\nelse\n  case abs_number % 10\n  when 1\n    \"st\"\n  when 2\n    \"nd\"\n  when 3\n    \"rd\"\n  else\n    \"th\"\n  end\nend\n"}},{"id":"ordinalize-instance-method","html_id":"ordinalize-instance-method","name":"ordinalize","doc":"Turns a number into an ordinal string used to denote the position in an\nordered sequence such as 1st, 2nd, 3rd, 4th.\n\n```\n  1.ordinalize     # => \"1st\"\n  2.ordinalize     # => \"2nd\"\n  1002.ordinalize  # => \"1002nd\"\n  1003.ordinalize  # => \"1003rd\"\n  -11.ordinalize   # => \"-11th\"\n  -1021.ordinalize # => \"-1021st\"\n```","summary":"<p>Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inflections.cr#L39","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inflections.cr#L39","def":{"name":"ordinalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{self}#{ordinal}\""}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/JSON","path":"JSON.html","kind":"module","full_name":"JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":56,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/werner/crystal_on_steroids/JSON/Any","path":"JSON/Any.html","kind":"struct","full_name":"JSON::Any","name":"Any","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":56,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/werner/crystal_on_steroids/JSON","kind":"module","full_name":"JSON","name":"JSON"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L56","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L56","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/werner/crystal_on_steroids/NamedTuple","path":"NamedTuple.html","kind":"struct","full_name":"NamedTuple(**T)","name":"NamedTuple","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":68,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"},{"filename":"crystal_on_steroids/named_tuple.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/named_tuple.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":91,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A named tuple is a fixed-size, immutable, stack-allocated mapping\nof a fixed set of keys to values.\n\nYou can think of a `NamedTuple` as an immutable `Hash` whose keys (which\nare of type `Symbol`), and the types for each key, are known at compile time.\n\nA named tuple can be created with a named tuple literal:\n\n```\nlanguage = {name: \"Crystal\", year: 2011} # NamedTuple(name: String, year: Int32)\n\nlanguage[:name]  # => \"Crystal\"\nlanguage[:year]  # => 2011\nlanguage[:other] # compile time error\n```\n\nThe compiler knows what types are in each key, so when indexing a named tuple\nwith a symbol literal the compiler will return the value for that key and\nwith the expected type, like in the above snippet. Indexing with a symbol\nliteral for which there's no key will give a compile-time error.\n\nIndexing with a symbol that is only known at runtime will return\na value whose type is the union of all the types in the named tuple,\nand might raise `KeyError`.","summary":"<p>A named tuple is a fixed-size, immutable, stack-allocated mapping of a fixed set of keys to values.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":"Returns `true` if this named tuple is empty.\n\n```\ntuple = {name: \"Crystal\", year: 2011}\ntuple.blank? # => false\n```","summary":"<p>Returns <code>true</code> if this named tuple is empty.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/named_tuple.cr#L8","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/named_tuple.cr#L8","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.empty?"}},{"id":"to_query(namespace=nil)-instance-method","html_id":"to_query(namespace=nil)-instance-method","name":"to_query","doc":null,"summary":null,"abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"nil","external_name":"namespace","restriction":""}],"args_string":"(namespace = <span class=\"n\">nil</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L92","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L92","def":{"name":"to_query","args":[{"name":"namespace","doc":null,"default_value":"nil","external_name":"namespace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_h.to_query(namespace)"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/nil.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/nil.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":23,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":"A nil object always will be blank.\n\n```\nnil.blank?\n=> true\n```\n\nsource: Rails ActiveSupport","summary":"<p>A nil object always will be blank.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/nil.cr#L10","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/nil.cr#L10","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":"Return `self`","summary":"<p>Return <code>self</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L25","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L25","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/AliasMethod","kind":"module","full_name":"AliasMethod","name":"AliasMethod"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/bytes.cr","line_number":3,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr"},{"filename":"crystal_on_steroids/number.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/number.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"EXABYTE","value":"PETABYTE * 1024","doc":null,"summary":null},{"name":"GIGABYTE","value":"MEGABYTE * 1024","doc":null,"summary":null},{"name":"KILOBYTE","value":"1024.to_big_i","doc":null,"summary":null},{"name":"MEGABYTE","value":"KILOBYTE * 1024","doc":null,"summary":null},{"name":"PETABYTE","value":"TERABYTE * 1024","doc":null,"summary":null},{"name":"TERABYTE","value":"GIGABYTE * 1024","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/AliasMethod","kind":"module","full_name":"AliasMethod","name":"AliasMethod"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/werner/crystal_on_steroids/Int","kind":"struct","full_name":"Int","name":"Int"}],"including_types":[],"namespace":null,"doc":"The top-level number type.","summary":"<p>The top-level number type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":"A number object will be blank if it's zero.\n\n```\n0.blank?\n=> true\n\n23.45.blank?\n=> false\n```\n\nsource: Rails ActiveSupport","summary":"<p>A number object will be blank if it's zero.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/number.cr#L13","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/number.cr#L13","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"zero?"}},{"id":"byte(*args)-instance-method","html_id":"byte(*args)-instance-method","name":"byte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L21","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L21","def":{"name":"byte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes(*args)"}},{"id":"bytes-instance-method","html_id":"bytes-instance-method","name":"bytes","doc":"Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes\n\n```\n  2.bytes # => 2\n```","summary":"<p>Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L18","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L18","def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"exabyte(*args)-instance-method","html_id":"exabyte(*args)-instance-method","name":"exabyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L81","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L81","def":{"name":"exabyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exabytes(*args)"}},{"id":"exabytes-instance-method","html_id":"exabytes-instance-method","name":"exabytes","doc":"Returns the number of bytes equivalent to the exabytes provided.\n\n```\n  2.exabytes # => 2_305_843_009_213_693_952\n```","summary":"<p>Returns the number of bytes equivalent to the exabytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L78","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L78","def":{"name":"exabytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * EXABYTE"}},{"id":"gigabyte(*args)-instance-method","html_id":"gigabyte(*args)-instance-method","name":"gigabyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L51","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L51","def":{"name":"gigabyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"gigabytes(*args)"}},{"id":"gigabytes-instance-method","html_id":"gigabytes-instance-method","name":"gigabytes","doc":"Returns the number of bytes equivalent to the gigabytes provided.\n\n```\n  2.gigabytes # => 2_147_483_648\n```","summary":"<p>Returns the number of bytes equivalent to the gigabytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L48","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L48","def":{"name":"gigabytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * GIGABYTE"}},{"id":"kilobyte(*args)-instance-method","html_id":"kilobyte(*args)-instance-method","name":"kilobyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L31","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L31","def":{"name":"kilobyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"kilobytes(*args)"}},{"id":"kilobytes-instance-method","html_id":"kilobytes-instance-method","name":"kilobytes","doc":"Returns the number of bytes equivalent to the kilobytes provided.\n\n```\n  2.kilobytes # => 2048\n```","summary":"<p>Returns the number of bytes equivalent to the kilobytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L28","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L28","def":{"name":"kilobytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * KILOBYTE"}},{"id":"megabyte(*args)-instance-method","html_id":"megabyte(*args)-instance-method","name":"megabyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L41","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L41","def":{"name":"megabyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"megabytes(*args)"}},{"id":"megabytes-instance-method","html_id":"megabytes-instance-method","name":"megabytes","doc":"Returns the number of bytes equivalent to the megabytes provided.\n\n```\n  2.megabytes # => 2_097_152\n```","summary":"<p>Returns the number of bytes equivalent to the megabytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L38","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L38","def":{"name":"megabytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * MEGABYTE"}},{"id":"petabyte(*args)-instance-method","html_id":"petabyte(*args)-instance-method","name":"petabyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L71","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L71","def":{"name":"petabyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"petabytes(*args)"}},{"id":"petabytes-instance-method","html_id":"petabytes-instance-method","name":"petabytes","doc":"Returns the number of bytes equivalent to the petabytes provided.\n\n```\n  2.petabytes # => 2_251_799_813_685_248\n```","summary":"<p>Returns the number of bytes equivalent to the petabytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L68","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L68","def":{"name":"petabytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * PETABYTE"}},{"id":"terabyte(*args)-instance-method","html_id":"terabyte(*args)-instance-method","name":"terabyte","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L61","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L61","def":{"name":"terabyte","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"terabytes(*args)"}},{"id":"terabytes-instance-method","html_id":"terabytes-instance-method","name":"terabytes","doc":"Returns the number of bytes equivalent to the terabytes provided.\n\n```\n  2.terabytes # => 2_199_023_255_552\n```","summary":"<p>Returns the number of bytes equivalent to the terabytes provided.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L58","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/bytes.cr#L58","def":{"name":"terabytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * TERABYTE"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":26,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"},{"filename":"crystal_on_steroids/inclusion.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inclusion.cr"},{"filename":"crystal_on_steroids/object.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr"},{"filename":"crystal_on_steroids/to_query.cr","line_number":4,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Object` is the base type of all Crystal objects.","summary":"<p><code><a href=\"Object.html\">Object</a></code> is the base type of all Crystal objects.</p>","class_methods":[{"id":"â¨â¯Â°â¡Â°â©â¯ï¸µâ»ââ»-class-method","html_id":"â¨â¯Â°â¡Â°â©â¯ï¸µâ»ââ»-class-method","name":"â¨â¯Â°â¡Â°â©â¯ï¸µâ»ââ»","doc":"source: https://github.com/mperham/sidekiq/blob/e447dae961ebc894f12848d9f33446a07ffc67dc/lib/sidekiq.rb#L52","summary":"<p>source: https://github.com/mperham/sidekiq/blob/e447dae961ebc894f12848d9f33446a07ffc67dc/lib/sidekiq.rb#L52</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L22","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L22","def":{"name":"â¨â¯Â°â¡Â°â©â¯ï¸µâ»ââ»","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"Calm down, yo.\")"}}],"constructors":[],"instance_methods":[{"id":"dig?(index,*keys)-instance-method","html_id":"dig?(index,*keys)-instance-method","name":"dig?","doc":"Retrieves the value object corresponding to the each key objects repeatedly.\nThe type needs to implement #[]? method to works.\n\n```\nh = { foo: {bar: {baz: 5}}}\n\nh.dig?(:foo, :bar, :baz)           #=> 5\nh.dig?(:foo, :blah)                #=> nil\n```","summary":"<p>Retrieves the value object corresponding to the each key objects repeatedly.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(index, *keys)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L40","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L40","def":{"name":"dig?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.responds_to?(:[]?)\n  item = self[index]?\n  keys.empty? ? item : item.dig?(*keys)\nend"}},{"id":"dig?-instance-method","html_id":"dig?-instance-method","name":"dig?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L27","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L27","def":{"name":"dig?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"in?(another_object)-instance-method","html_id":"in?(another_object)-instance-method","name":"in?","doc":"Returns true if this object is included in the argument. Argument must be\nany object which responds to `#include?`. Usage:\n\n```\n  characters = [\"Konata\", \"Kagami\", \"Tsukasa\"]\n  \"Konata\".in?(characters) # => true\n```\n\nThis will throw an `ArgumentError` if the argument doesn't respond\nto `#include?`.\nsource: Rails ActiveSupport","summary":"<p>Returns true if this object is included in the argument.</p>","abstract":false,"args":[{"name":"another_object","doc":null,"default_value":"","external_name":"another_object","restriction":""}],"args_string":"(another_object)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inclusion.cr#L13","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inclusion.cr#L13","def":{"name":"in?","args":[{"name":"another_object","doc":null,"default_value":"","external_name":"another_object","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"another_object.includes?(self)"}},{"id":"presence-instance-method","html_id":"presence-instance-method","name":"presence","doc":"Returns the receiver if it's present otherwise returns `nil`.\n`object.presence` is equivalent to\n\n```\nobject.present? ? object : nil\n```\n\nsource: Rails ActiveSupport","summary":"<p>Returns the receiver if it's present otherwise returns <code>nil</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L17","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L17","def":{"name":"presence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if present?\n  self\nend"}},{"id":"presence_in(another_object)-instance-method","html_id":"presence_in(another_object)-instance-method","name":"presence_in","doc":"Returns the receiver if it's included in the argument otherwise returns `nil`.\nArgument must be any object which responds to `#include?`. Usage:\n\n```\n  params[:bucket_type].presence_in %w( project calendar )\n```\n\nsource: Rails ActiveSupport","summary":"<p>Returns the receiver if it's included in the argument otherwise returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"another_object","doc":null,"default_value":"","external_name":"another_object","restriction":""}],"args_string":"(another_object)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inclusion.cr#L25","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/inclusion.cr#L25","def":{"name":"presence_in","args":[{"name":"another_object","doc":null,"default_value":"","external_name":"another_object","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"in?(another_object) ? self : nil"}},{"id":"present?-instance-method","html_id":"present?-instance-method","name":"present?","doc":"An object is present if it's not blank.\n\nsource: Rails ActiveSupport","summary":"<p>An object is present if it's not blank.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L5","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/object.cr#L5","def":{"name":"present?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!blank?"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":"Alias for `to_s`","summary":"<p>Alias for <code>to_s</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L6","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L6","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_query(namespace)-instance-method","html_id":"to_query(namespace)-instance-method","name":"to_query","doc":"Converts an object into a string suitable for use as a URL query string,\nusing the given `namespace` as the param name.","summary":"<p>Converts an object into a string suitable for use as a URL query string, using the given <code>namespace</code> as the param name.</p>","abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""}],"args_string":"(namespace)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L18","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L18","def":{"name":"to_query","args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{URI.escape(namespace.to_param)}=#{URI.escape(to_param.to_s)}\""}},{"id":"to_query-instance-method","html_id":"to_query-instance-method","name":"to_query","doc":"Converts an object into a string suitable for use as a URL query string,\nno key provided","summary":"<p>Converts an object into a string suitable for use as a URL query string, no key provided</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L12","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/to_query.cr#L12","def":{"name":"to_query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"URI.escape(to_param.to_s)"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Range","path":"Range.html","kind":"struct","full_name":"Range(B, E)","name":"Range","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/range.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/range.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Range` represents an interval: a set of values with a beginning and an end.\n\nRanges may be constructed using the usual `new` method or with literals:\n\n```\nx..y  # an inclusive range, in mathematics: [x, y]\nx...y # an exclusive range, in mathematics: [x, y)\n```\n\nAn easy way to remember which one is inclusive and which one is exclusive it\nto think of the extra dot as if it pushes *y* further away, thus leaving it outside of the range.\n\nRanges typically involve integers, but can be created using arbitrary objects\nas long as they define `succ` (or `pred` for `reverse_each`), to get the\nnext element in the range, and `<` and `==`, to know when the range reached the end:\n\n```\n# Represents a string of 'x's.\nstruct Xs\n  include Comparable(Xs)\n\n  getter size\n\n  def initialize(@size : Int32)\n  end\n\n  def succ\n    Xs.new(@size + 1)\n  end\n\n  def <=>(other)\n    @size <=> other.size\n  end\n\n  def inspect(io)\n    @size.times { io << 'x' }\n  end\n\n  def to_s(io)\n    io << @size << ' '\n    inspect(io)\n  end\nend\n```\n\nAn example of using `Xs` to construct a range:\n\n```\nr = Xs.new(3)..Xs.new(6)\nr.to_s                 # => \"xxx..xxxxxx\"\nr.to_a                 # => [Xs.new(3), Xs.new(4), Xs.new(5), Xs.new(6)]\nr.includes?(Xs.new(5)) # => true\n```","summary":"<p>A <code><a href=\"Range.html\">Range</a></code> represents an interval: a set of values with a beginning and an end.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"overlaps?(other:Range):Bool-instance-method","html_id":"overlaps?(other:Range):Bool-instance-method","name":"overlaps?","doc":"Compare two ranges and see if they overlap each other\n```\n (1..5).overlaps?(4..6) # => true\n (1..5).overlaps?(7..9) # => false\n```","summary":"<p>Compare two ranges and see if they overlap each other <code></code>`  (1..5).overlaps?(4..6) # => true  (1..5).overlaps?(7..9) # => false <code></code>`</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Range"}],"args_string":"(other : Range) : Bool","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/range.cr#L7","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/range.cr#L7","def":{"name":"overlaps?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(covers?(other.first)) || (other.covers?(first))"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Regex","path":"Regex.html","kind":"class","full_name":"Regex","name":"Regex","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/regex.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/regex.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Regex` represents a regular expression, a pattern that describes the\ncontents of strings. A `Regex` can determine whether or not a string matches\nits description, and extract the parts of the string that match.\n\nA `Regex` can be created using the literal syntax, in which it is delimited by\nforward slashes (`/`):\n\n```\n/hay/ =~ \"haystack\"   # => 0\n/y/.match(\"haystack\") # => #<Regex::MatchData \"y\">\n```\n\nInterpolation works in regular expression literals just as it does in string\nliterals. Be aware that using this feature will cause an exception to be\nraised at runtime, if the resulting string would not be a valid regular\nexpression.\n\n```\nx = \"a\"\n/#{x}/.match(\"asdf\") # => #<Regex::MatchData \"a\">\nx = \"(\"\n/#{x}/ # raises ArgumentError\n```\n\nWhen we check to see if a particular regular expression describes a string,\nwe can say that we are performing a match or matching one against the other.\nIf we find that a regular expression does describe a string, we say that it\nmatches, and we can refer to a part of the string that was described as\na match.\n\nHere `\"haystack\"` does not contain the pattern `/needle/`, so it doesn't match:\n\n```\n/needle/.match(\"haystack\") # => nil\n```\n\nHere `\"haystack\"` contains the pattern `/hay/`, so it matches:\n\n```\n/hay/.match(\"haystack\") # => #<Regex::MatchData \"hay\">\n```\n\nRegex methods that perform a match usually return a truthy value if there was\na match and `nil` if there was no match. After performing a match, the\nspecial variable `$~` will be an instance of `Regex::MatchData` if it matched, `nil`\notherwise.\n\nWhen matching a regular expression using `=~` (either `String#=~` or\n`Regex#=~`), the returned value will be the index of the first match in the\nstring if the expression matched, `nil` otherwise.\n\n```\n/stack/ =~ \"haystack\"  # => 3\n\"haystack\" =~ /stack/  # => 3\n$~                     # => #<Regex::MatchData \"stack\">\n/needle/ =~ \"haystack\" # => nil\n\"haystack\" =~ /needle/ # => nil\n$~                     # raises Exception\n```\n\nWhen matching a regular expression using `#match` (either `String#match` or\n`Regex#match`), the returned value will be a `Regex::MatchData` if the expression\nmatched, `nil` otherwise.\n\n```\n/hay/.match(\"haystack\")    # => #<Regex::MatchData \"hay\">\n\"haystack\".match(/hay/)    # => #<Regex::MatchData \"hay\">\n$~                         # => #<Regex::MatchData \"hay\">\n/needle/.match(\"haystack\") # => nil\n\"haystack\".match(/needle/) # => nil\n$~                         # raises Exception\n```\n\n[Regular expressions](https://en.wikipedia.org/wiki/Regular_expression)\nhave their own language for describing strings.\n\nMany programming languages and tools implement their own regular expression\nlanguage, but Crystal uses [PCRE](http://www.pcre.org/), a popular C library\nfor providing regular expressions. Here give a brief summary of the most\nbasic features of regular expressions - grouping, repetition, and\nalternation - but the feature set of PCRE extends far beyond these, and we\ndon't attempt to describe it in full here. For more information, refer to\nthe PCRE documentation, especially the\n[full pattern syntax](http://www.pcre.org/original/doc/html/pcrepattern.html)\nor\n[syntax quick reference](http://www.pcre.org/original/doc/html/pcresyntax.html).\n\nThe regular expression language can be used to match much more than just the\nstatic substrings in the above examples. Certain characters, called\n[metacharacters](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC4),\nare given special treatment in regular expressions, and can be used to\ndescribe more complex patterns. To match metacharacters literally in a\nregular expression, they must be escaped by being preceded with a backslash\n(`\\`). `escape` will do this automatically for a given String.\n\nA group of characters (often called a capture group or\n[subpattern](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC14))\ncan be identified by enclosing it in parentheses (`()`). The contents of\neach capture group can be extracted on a successful match:\n\n```\n/a(sd)f/.match(\"_asdf_\")                     # => #<Regex::MatchData \"asdf\" 1:\"sd\">\n/a(sd)f/.match(\"_asdf_\").try &.[1]           # => \"sd\"\n/a(?<grp>sd)f/.match(\"_asdf_\")               # => #<Regex::MatchData \"asdf\" grp:\"sd\">\n/a(?<grp>sd)f/.match(\"_asdf_\").try &.[\"grp\"] # => \"sd\"\n```\n\nCapture groups are indexed starting from 1. Methods that accept a capture\ngroup index will usually also accept 0 to refer to the full match. Capture\ngroups can also be given names, using the `(?&lt;name&gt;...)` syntax, as in the\nprevious example.\n\nFollowing a match, the special variables $N (e.g., $1, $2, $3, ...) can be used\nto access a capture group. Trying to access an invalid capture group will raise an\nexception. Note that it is possible to have a successful match with a nil capture:\n\n```\n/(spice)(s)?/.match(\"spice\") # => #<Regex::MatchData \"spice\" 1:\"spice\" 2:nil>\n$1                           # => \"spice\"\n$2                           # => raises Exception\n```\n\nThis can be mitigated by using the nilable version of the above: $N?,\n(e.g., $1? $2?, $3?, ...). Changing the above to use `$2?` instead of `$2`\nwould return `nil`. `$2?.nil?` would return `true`.\n\nA character or group can be\n[repeated](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC17)\nor made optional using an asterisk (`*` - zero or more), a plus sign\n(`+` - one or more), integer bounds in curly braces\n(`{n,m}`) (at least `n`, no more than `m`), or a question mark\n(`?`) (zero or one).\n\n```\n/fo*/.match(\"_f_\")         # => #<Regex::MatchData \"f\">\n/fo+/.match(\"_f_\")         # => nil\n/fo*/.match(\"_foo_\")       # => #<Regex::MatchData \"foo\">\n/fo{3,}/.match(\"_foo_\")    # => nil\n/fo{1,3}/.match(\"_foo_\")   # => #<Regex::MatchData \"foo\">\n/fo*/.match(\"_foo_\")       # => #<Regex::MatchData \"foo\">\n/fo*/.match(\"_foooooooo_\") # => #<Regex::MatchData \"foooooooo\">\n/fo{,3}/.match(\"_foooo_\")  # => nil\n/f(op)*/.match(\"fopopo\")   # => #<Regex::MatchData \"fopop\" 1: \"op\">\n/foo?bar/.match(\"foobar\")  # => #<Regex::MatchData \"foobar\">\n/foo?bar/.match(\"fobar\")   # => #<Regex::MatchData \"fobar\">\n```\n\nAlternatives can be separated using a\n[vertical bar](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC12)\n(`|`). Any single character can be represented by\n[dot](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC7)\n(`.`). When matching only one character, specific\nalternatives can be expressed as a\n[character class](http://www.pcre.org/original/doc/html/pcrepattern.html#SEC9),\nenclosed in square brackets (`[]`):\n\n```\n/foo|bar/.match(\"foo\")     # => #<Regex::MatchData \"foo\">\n/foo|bar/.match(\"bar\")     # => #<Regex::MatchData \"bar\">\n/_(x|y)_/.match(\"_x_\")     # => #<Regex::MatchData \"_x_\" 1: \"x\">\n/_(x|y)_/.match(\"_y_\")     # => #<Regex::MatchData \"_y_\" 1: \"y\">\n/_(x|y)_/.match(\"_(x|y)_\") # => nil\n/_(x|y)_/.match(\"_(x|y)_\") # => nil\n/_._/.match(\"_x_\")         # => #<Regex::MatchData \"_x_\">\n/_[xyz]_/.match(\"_x_\")     # => #<Regex::MatchData \"_x_\">\n/_[a-z]_/.match(\"_x_\")     # => #<Regex::MatchData \"_x_\">\n/_[^a-z]_/.match(\"_x_\")    # => nil\n/_[^a-wy-z]_/.match(\"_x_\") # => #<Regex::MatchData \"_x_\">\n```\n\nRegular expressions can be defined with these 3\n[optional flags](http://www.pcre.org/original/doc/html/pcreapi.html#SEC11):\n\n* `i`: ignore case (PCRE_CASELESS)\n* `m`: multiline (PCRE_MULTILINE and PCRE_DOTALL)\n* `x`: extended (PCRE_EXTENDED)\n\n```\n/asdf/ =~ \"ASDF\"    # => nil\n/asdf/i =~ \"ASDF\"   # => 0\n/^z/i =~ \"ASDF\\nZ\"  # => nil\n/^z/im =~ \"ASDF\\nZ\" # => 5\n```\n\nPCRE supports other encodings, but Crystal strings are UTF-8 only, so Crystal\nregular expressions are also UTF-8 only (by default).\n\nPCRE optionally permits named capture groups (named subpatterns) to not be\nunique. Crystal exposes the name table of a `Regex` as a\n`Hash` of `String` => `Int32`, and therefore requires named capture groups to have\nunique names within a single `Regex`.","summary":"<p>A <code><a href=\"Regex.html\">Regex</a></code> represents a regular expression, a pattern that describes the contents of strings.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"match?(str,pos=0,options=Regex::Options::None):Bool-instance-method","html_id":"match?(str,pos=0,options=Regex::Options::None):Bool-instance-method","name":"match?","doc":"Returns `true` if a character match at specified index. Matches a regular expression against `String`\n*str*. Starts at the character index given by *pos* if given, otherwise at\nthe start of *str*. Returns a `Regex::MatchData` if *str* matched, otherwise\n`nil`. `$~` will contain the same value that was returned.\n\n```\n/ab/.match?(\"abc\")              # => true\n/z/.match?(\"abc\", 1).try &.[2]  # => false\n```","summary":"<p>Returns <code>true</code> if a character match at specified index.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pos","doc":null,"default_value":"0","external_name":"pos","restriction":""},{"name":"options","doc":null,"default_value":"Regex::Options::None","external_name":"options","restriction":""}],"args_string":"(str, pos = <span class=\"n\">0</span>, options = <span class=\"t\">Regex</span><span class=\"t\">::</span><span class=\"t\">Options</span><span class=\"t\">::</span><span class=\"t\">None</span>) : Bool","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/regex.cr#L11","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/regex.cr#L11","def":{"name":"match?","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pos","doc":null,"default_value":"0","external_name":"pos","restriction":""},{"name":"options","doc":null,"default_value":"Regex::Options::None","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!(!(match(str, pos, options)))"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/string.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['ï¿½', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"remove(*patterns)-instance-method","html_id":"remove(*patterns)-instance-method","name":"remove","doc":"Alters the string by removing all occurrences of the patterns.\n```\nstr = \"foo bar test\"\nstr.remove(\" test\", /bar/)         # => \"foo \"\nstr                                # => \"foo \"\n```\n\nsource: Rails ActiveSupport","summary":"<p>Alters the string by removing all occurrences of the patterns.</p>","abstract":false,"args":[{"name":"patterns","doc":null,"default_value":"","external_name":"patterns","restriction":""}],"args_string":"(*patterns)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L10","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L10","def":{"name":"remove","args":[{"name":"patterns","doc":null,"default_value":"","external_name":"patterns","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dup = self.dup\npatterns.each do |pattern|\n  dup = dup.gsub(pattern, \"\")\nend\ndup\n"}},{"id":"squish-instance-method","html_id":"squish-instance-method","name":"squish","doc":"Remove first and last whitespace and reduce to one \nall the others in the same sentence\n\n```\n\" foo   bar    \\n   \\t   boo\".squish # => \"foo bar boo\"\n```\n\nsource: Rails ActiveSupport","summary":"<p>Remove first and last whitespace and reduce to one  all the others in the same sentence</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L98","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L98","def":{"name":"squish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(gsub(/[[:space:]]+/, \" \")).strip"}},{"id":"truncate(truncate_at,options={}ofSymbol=>String)-instance-method","html_id":"truncate(truncate_at,options={}ofSymbol=&gt;String)-instance-method","name":"truncate","doc":"Truncates a given `text` after a given `size` if `text` is longer than `size`:\n\n```\n\"Once upon a time in a world far far away\".truncate(27)\n# => \"Once upon a time in a wo...\"\n```\n\nPass a string or regexp `:separator` to truncate `text` at a natural break:\n\n```\n\"Once upon a time in a world far far away\".truncate(27, separator: \" \")\n# => \"Once upon a time in a...\"\n```\n\nThe last characters will be replaced with the `:omission` string (defaults to \"...\")\nfor a total size not exceeding `size`:\n\n```\n\"And they found that many people were sleeping better.\".truncate(25, omission: \"... (continued)\")\n# => \"And they f... (continued)\"\n```\n\nsource: Rails ActiveSupport","summary":"<p>Truncates a given <code>text</code> after a given <code>size</code> if <code>text</code> is longer than <code>size</code>:</p>","abstract":false,"args":[{"name":"truncate_at","doc":null,"default_value":"","external_name":"truncate_at","restriction":""},{"name":"options","doc":null,"default_value":"{} of Symbol => String","external_name":"options","restriction":""}],"args_string":"(truncate_at, options = {} <span class=\"k\">of</span> <span class=\"t\">Symbol</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L41","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L41","def":{"name":"truncate","args":[{"name":"truncate_at","doc":null,"default_value":"","external_name":"truncate_at","restriction":""},{"name":"options","doc":null,"default_value":"{} of Symbol => String","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size > truncate_at\nelse\n  return dup\nend\nomission = options[:omission]? || \"...\"\nsize_with_room_for_omission = truncate_at - omission.size\nseparator = options[:separator]? || nil\nstop = if separator\n  (rindex(separator, size_with_room_for_omission)) || size_with_room_for_omission\nelse\n  size_with_room_for_omission\nend\nstring = self\n\"#{string[0, stop]}#{omission}\"\n"}},{"id":"truncate_words(words_count,options={}ofSymbol=>String)-instance-method","html_id":"truncate_words(words_count,options={}ofSymbol=&gt;String)-instance-method","name":"truncate_words","doc":"Truncates a given `text` after a given number of words (`words_count`):\n\n ```\n\"Once upon a time in a world far far away\".truncate_words(4)\n# => \"Once upon a time...\"\n ```\n\nPass a string `:separator` to specify a different separator of words:\n\n```\n\"Once<br>upon<br>a<br>time<br>in<br>a<br>world\".truncate_words(5, separator: \"<br>\")\n# => \"Once<br>upon<br>a<br>time<br>in...\"\n```\n\nThe last characters will be replaced with the `:omission` string (defaults to \"...\"):\n\n```\n\"And they found that many people were sleeping better.\".truncate_words(5, omission: \"... (continued)\")\n# => \"And they found that many... (continued)\"\n```\n\nsource: Rails ActiveSupport","summary":"<p>Truncates a given <code>text</code> after a given number of words (<code>words_count</code>):</p>","abstract":false,"args":[{"name":"words_count","doc":null,"default_value":"","external_name":"words_count","restriction":""},{"name":"options","doc":null,"default_value":"{} of Symbol => String","external_name":"options","restriction":""}],"args_string":"(words_count, options = {} <span class=\"k\">of</span> <span class=\"t\">Symbol</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L80","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/string.cr#L80","def":{"name":"truncate_words","args":[{"name":"words_count","doc":null,"default_value":"","external_name":"words_count","restriction":""},{"name":"options","doc":null,"default_value":"{} of Symbol => String","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sep = options[:separator]? || \" \"\nif sep.is_a?(Regex)\nelse\n  sep = Regex.escape(sep.to_s)\nend\nif self =~ (/\\A((?>.+?#{sep}){#{words_count - 1}}.+?)#{sep}.*/m)\n  $~[1] + (options[:omission]? || \"...\")\nelse\n  dup\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/time.cr","line_number":1,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Time` represents an instance in time. Here are some examples:\n\n### Basic Usage\n\n```\ntime = Time.new(2016, 2, 15, 10, 20, 30)\n\ntime.year    # => 2016\ntime.month   # => 2\ntime.day     # => 15\ntime.hour    # => 10\ntime.minute  # => 20\ntime.second  # => 30\ntime.monday? # => true\n\n# Creating a time instance with a date only\nTime.new(2016, 2, 15) # => 2016-02-15 00:00:00\n\n# Specifying a time\nTime.new(2016, 2, 15, 10, 20, 30) # => 2016-02-15 10:20:30\n\n# Creating a time instance in UTC\nTime.utc(2016, 2, 15, 10, 20, 30) # => 2016-02-15 10:20:30 UTC\n```\n\n### Formatting Time\n\nThe `to_s` method returns a `String` value in the assigned format.\n\n```\ntime = Time.new(2015, 10, 12)\ntime.to_s(\"%Y-%m-%d\") # => \"2015-10-12\"\n```\n\nSee `Time::Format` for all the directives.\n\n### Calculation\n\n```\nTime.new(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00\n\n# Time calculation returns a Time::Span instance\nspan = Time.new(2015, 10, 10) - Time.new(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n\n# Calculation between Time::Span instances\nspan_a = Time::Span.new(3, 0, 0)\nspan_b = Time::Span.new(2, 0, 0)\nspan = span_a - span_b\nspan       # => 01:00:00\nspan.class # => Time::Span\nspan.hours # => 1\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents an instance in time.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"next_day-instance-method","html_id":"next_day-instance-method","name":"next_day","doc":"Moves one day in the future.","summary":"<p>Moves one day in the future.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L8","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L8","def":{"name":"next_day","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.at_beginning_of_day + 1.day"}},{"id":"prev_day-instance-method","html_id":"prev_day-instance-method","name":"prev_day","doc":"Moves one day in the past.","summary":"<p>Moves one day in the past.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L3","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L3","def":{"name":"prev_day","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.at_beginning_of_day - 1.day"}},{"id":"today?-instance-method","html_id":"today?-instance-method","name":"today?","doc":"Check if the especified time is corresponding to today","summary":"<p>Check if the especified time is corresponding to today</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L23","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L23","def":{"name":"today?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"now = Time.now\nnow.at_beginning_of_day <= self && self <= now.at_end_of_day\n"}},{"id":"tomorrow-instance-method","html_id":"tomorrow-instance-method","name":"tomorrow","doc":"Moves one day in the future.","summary":"<p>Moves one day in the future.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L18","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L18","def":{"name":"tomorrow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"next_day"}},{"id":"yesterday-instance-method","html_id":"yesterday-instance-method","name":"yesterday","doc":"Moves one day in the past.","summary":"<p>Moves one day in the past.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L13","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/time.cr#L13","def":{"name":"yesterday","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prev_day"}}],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/Tuple","path":"Tuple.html","kind":"struct","full_name":"Tuple(*T)","name":"Tuple","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/werner/crystal_on_steroids/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/werner/crystal_on_steroids/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":64,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A tuple is a fixed-size, immutable, stack-allocated sequence of values\nof possibly different types.\n\nYou can think of a `Tuple` as an immutable `Array` whose types for each position\nare known at compile time.\n\nA tuple can be created with the usual `new` method or with a tuple literal:\n\n```\ntuple = {1, \"hello\", 'x'} # Tuple(Int32, String, Char)\ntuple[0]                  # => 1\ntuple[1]                  # => \"hello\"\ntuple[2]                  # => 'x'\n```\n\nThe compiler knows what types are in each position, so when indexing\na tuple with an integer literal the compiler will return\nthe value in that index and with the expected type, like in the above\nsnippet. Indexing with an integer literal outside the bounds of the tuple\nwill give a compile-time error.\n\nIndexing with an integer value that is only known at runtime will return\na value whose type is the union of all the types in the tuple, and might raise\n`IndexError`.\n\nTuples are the preferred way to return fixed-size multiple return\nvalues because no memory is needed to be allocated for them:\n\n```\ndef one_and_hello\n  {1, \"hello\"}\nend\n\none, hello = one_and_hello\none   # => 1\nhello # => \"hello\"\n```\n\nGood examples of the above are `Number#divmod` and `Enumerable#minmax`.\n\nTuples can be splat with the `*` operator and passed to methods:\n\n```\ndef multiply(string, value)\n  string * value\nend\n\ntuple = {\"hey\", 2}\nvalue = multiply(*tuple) # same as multiply tuple[0], tuple[1]\nvalue                    # => \"heyhey\"\n```\n\nFinally, when using a splat argument in a method definition its type\nwill be a tuple of the call arguments:\n\n```\ndef splat_test(*args)\n  args\nend\n\ntuple = splat_test 1, \"hello\", 'x'\ntuple.class # => Tuple(Int32, String, Char)\ntuple       # => {1, \"hello\", 'x'}\n```","summary":"<p>A tuple is a fixed-size, immutable, stack-allocated sequence of values of possibly different types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/werner/crystal_on_steroids/YAML","path":"YAML.html","kind":"module","full_name":"YAML","name":"YAML","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":60,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/werner/crystal_on_steroids/YAML/Any","path":"YAML/Any.html","kind":"struct","full_name":"YAML::Any","name":"Any","abstract":false,"superclass":{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"},{"html_id":"github.com/werner/crystal_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/werner/crystal_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/werner/crystal_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crystal_on_steroids/dig.cr","line_number":60,"url":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr"}],"repository_name":"github.com/werner/crystal_on_steroids","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/werner/crystal_on_steroids/Dig","kind":"module","full_name":"Dig","name":"Dig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/werner/crystal_on_steroids/YAML","kind":"module","full_name":"YAML","name":"YAML"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L60","source_link":"https://github.com/werner/crystal_on_steroids/blob/1d10b2e724b234e48d8eea440acf2f4b10ee4af9/src/crystal_on_steroids/dig.cr#L60","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]}}